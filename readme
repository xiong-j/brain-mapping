This release includes the first part of our algorithm: finding the best cutting angle and the slice correspondence in the atlas, in another word, the corresponding planes in the rotated atlas assuming cutting angle is consistant.

This release is for non-commercial use only.

Citation:
If you use our code for research, please cite our paper:
Xiong, Jing, Jing Ren, Liqun Luo, and Mark Horowitz. "Mapping mouse brain slice sequence to a reference brain without 3D reconstruction." bioRxiv (2018): 357475.
If you use our experimental data for research, please cite our paper:
Ren, Jing, Drew Friedmann, Jing Xiong, Cindy D. Liu, Brielle R. Ferguson, Tanya Weerakkody, Katherine E. DeLoach et al. "Anatomically Defined and Functionally Distinct Dorsal Raphe Serotonin Sub-systems." Cell (2018). 
If you use our sectional atlas data for research, please cite both the above papers.

Question:
If you have any question or request about the code and data, or want to collaborate with us, please email me at jing.xiong@cs.stanford.edu or email my advisor at horowitz@stnaford.edu

Setup:
Required program: MATLAB
Code is developed and tested under Linux System

Quick Start(setup)
1. Download the release.zip file and extract
2. Run demo_sectional_brain_find_angle_and_slice_match_iterative.m as an example of sectional brain angle and slice mapping
3. Run demo_full_brain_find_angle_and_slice_match_iterative.m for an example of mapping a full brain data set to its corresponding sectioning plane in the atlas

Example:
The sample file is a real experimental file and the sectional atlas created in the workï¼š
Ren, Jing, Drew Friedmann, Jing Xiong, Cindy D. Liu, Katherine E. DeLoach, Chen Ran, Albert Pu et al. "Anatomical, physiological, and functional heterogeneity of the dorsal raphe serotonin system." (2018).
The full brain example comes from the Luo Lab.

Input:
1. filename: tif file that contains your experimental images, need to be preprocessed to remove noisy non-zero intensity background, and remove easily detached regions that are not consistent in 3D. default order: posterior - anterior
2. brainname: saves the output files starting with the brain name
3. experimental_thickness: thickness of your slice
4. expresolution: resolution of pixel in experimental data
5. begin_yangle: angle to begin the iterative angle search with, this angle is the angle around the left-right axis
6: atlas_folder: this atlas folder contains the preprocessed sectional atlas, the atlas well includes the dorsal raphe region. The cortex and lobes are removed because they are easily missing in our experimental slice, so we removed them all. The rotated atlas will be saved in this same folder, so for another experimental brain you don't need to compute the rotated brain again. naming norm: tatlas_xangle_yangle.tif or tatlas_xangle_yangle_negative.tif if you use sectional atlas, remember what the starting and ending slices are. The default order is posterior to anterior.
6. good_quality_indices: indices of good quality images. if not specified (input as []), the program automatically use every third slice. Guideline: use near every third slice for sectional data, use near every sixth or seventh slice for full brain data
7. thresh: spatial flexibility, don't change if not sure

Output:
x - rotation angle around the dorsal ventral axis
y - rotation angle around the left-right axis
correspondences - a vector of matching indices for each experimental slice in the experimental stack
tif file - qualitative result: matching pairs generated by our program
mat file - saves x,y,correspondences

Instructions on how to use our result
In the atlas folder, there are many rotated atlas files. In each file, it contains two variables: 1. tatlas (the rotated atlas volume). 2. origin (4 dimensions (size of tatlas, plus 3), this varibale saves in the unrotated (sectional atlas) each volxel in the rotated atlas comes from. so if you want to know where (coordinate x, coordinate y, in slice z in the rotated atlas) is in the unrotated atlas, simple read origin(x,y,z,:) This variable allows you to combine our algorithm with manual or other 2D registration algorithms or do other flexible tasks.

Instructions on how to generate your own (sectional) atlas:
Order: posterior to anterior
Remember the start and end slice in the original atlas if you use sectional atlas
save the (cropped) atlas as tatlas_0_0.mat
make a new folder to name this (sectional) atlas for your data
move the tatlas_0_0.mat to the folder
input the folder's name as in our demo file
The algorithm will rotate the atlas and record every voxel's origin for you

Sepcial instruction:
We find that the lobes are easily distorted, so in the full brain example, we avoided choosing the slices that have lobes. The general guideline is to choose slices with minimum distortions. If you work with sectional data in a brain section that can be easily distorted, you will need to preprocess your brain data to keep only the structures that are stable and preprocess the atlas data accordingly - look closely at the sectional brain example as a reference.
